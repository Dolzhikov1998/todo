{"version":3,"sources":["services/userServices.js","components/Header.js","components/Filters.js","components/Paginations.js","components/AlertErr.js","App.js","reportWebVitals.js","index.js","components/Item.js","components/LIstTodos.js"],"names":["instance","axios","create","baseURL","headers","addTask","id","record","a","post","response","getTask","get","deleteTask","idTask","delete","checkTask","patch","interceptors","use","status","alert","err","Header","addItem","useState","stateInp","setStateInp","counterForID","setcounterForID","className","TextField","label","variant","value","onChange","event","target","onKeyDown","key","name","done","Filters","props","filters","filtersForDate","Button","color","onClick","IconButton","aria-label","size","fontSize","useStyles","makeStyles","theme","root","marginTop","spacing","MyPaginations","todos","handlerPagin","classes","Pagination","count","Math","ceil","length","AlertErr","React","open","setOpen","Snackbar","autoHideDuration","onRequestClose","Alert","severity","App","setTodos","statusTodo","setStatusTodo","stateDate","setStateDate","statePag","setStatePag","setErr","newItem","data","message","idDeleteItem","filter","item","uuid","idItem","map","check","find","useEffect","func","statusItem","valueDate","deleteItem","changeCheckedTodosItem","statusTodos","changeTitle","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","width","Item","todo","changeCheckedTodos","stateCheck","setStateCheck","stateTitle","setStateTitle","styleInput","checked","createdAt","ListTodos","sortDateUp","b","sortDateDown","filterTodoForDate","sort","_","index","eval"],"mappings":"2MAKMA,E,OAAWC,EAAMC,OACnB,CACIC,QAJQ,2CAKRC,QAAS,CACL,eAAgB,sBAoBfC,EAAO,uCAAG,WAAOC,EAAIC,GAAX,eAAAC,EAAA,sEACQR,EAASS,KAAT,kBAAyBH,GAAMC,GADvC,cACTG,EADS,yBAERA,GAFQ,2CAAH,wDAKPC,EAAO,uCAAG,WAAOL,GAAP,eAAAE,EAAA,sEACQR,EAASY,IAAT,mBAAyBN,IADjC,cACTI,EADS,yBAERA,GAFQ,2CAAH,sDAKPG,EAAU,uCAAG,WAAOP,EAAIQ,GAAX,eAAAN,EAAA,sEACKR,EAASe,OAAT,kBAA2BT,EAA3B,YAAiCQ,IADtC,cACZJ,EADY,yBAEXA,GAFW,2CAAH,wDAKVM,EAAS,uCAAG,WAAMV,EAAIQ,EAAQP,GAAlB,eAAAC,EAAA,sEACMR,EAASiB,MAAT,kBAA0BX,EAA1B,YAAgCQ,GAAUP,GADhD,cACXG,EADW,yBAEVA,GAFU,2CAAH,0DAKtBV,EAASkB,aAAaR,SAASS,KAC3B,SAAAT,GACI,OAAuB,MAApBA,EAASU,QAAsC,MAApBV,EAASU,OAC5BC,MAAM,UAAD,OAAWX,EAASU,SAE7BV,KAEX,SAAAY,GAEI,OAAOA,K,oBC1BAC,MA7Bf,YAA2B,IAAVC,EAAS,EAATA,QAAS,EACUC,mBAAS,IADnB,mBACfC,EADe,KACLC,EADK,OAEmBF,mBAAS,GAF5B,mBAEfG,EAFe,KAEDC,EAFC,KAI1B,OACI,qBAAKC,UAAY,UAAjB,SAEI,cAACC,EAAA,EAAD,CACAzB,GAAG,iBACH0B,MAAM,kFACNC,QAAQ,WACRC,MAASR,EACTS,SAAY,SAAAC,GAAK,OAAIT,EAAYS,EAAMC,OAAOH,QAC9CI,UAAa,SAAAF,GACQ,UAAdA,EAAMG,MACW,KAAbb,EAAiBL,MAAM,6DAEtBG,EAAQ,CAACgB,KAAKd,EAAUe,MAAK,IAC7BZ,EAAgBD,EAAe,GAC/BD,EAAY,Y,oDCgBjBe,MA9Bf,SAAiBC,GAAO,IACZC,EACkBD,EADlBC,QACAC,EAAkBF,EAAlBE,eACR,OACI,sBAAKf,UAAU,yBAAf,UACI,gCACA,cAACgB,EAAA,EAAD,CAAQb,QAAU,WAAWc,MAAQ,UAAUC,QAAW,kBAAMJ,EAAQ,SAAxE,kBAGA,cAACE,EAAA,EAAD,CAAQb,QAAU,WAAWc,MAAQ,YAAYC,QAAW,kBAAMJ,EAAQ,UAA1E,oBAGA,cAACE,EAAA,EAAD,CAAQb,QAAU,WAAWc,MAAQ,UAAUC,QAAW,kBAAMJ,EAAQ,QAAxE,oBAKA,uBAAMd,UAAU,iBAAhB,UACI,8CADJ,WAEI,cAACmB,EAAA,EAAD,CAAYC,aAAa,SAAUC,KAAK,QAAQH,QAAW,kBAAMH,GAAe,IAAhF,SACI,cAAC,IAAD,CAAmBO,SAAW,cAElC,cAACH,EAAA,EAAD,CAAYC,aAAa,SAAUC,KAAK,QAAQH,QAAW,kBAAMH,GAAe,IAAhF,SACI,cAAC,IAAD,CAAiBO,SAAW,qB,0BC3B1CC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,SAyBlBC,MApBb,SAAuBhB,GAAO,IAE1BiB,EAEEjB,EAFFiB,MACAC,EACElB,EADFkB,aAGIC,EAAUT,IAEhB,OACI,qBAAKvB,UAAWgC,EAAQN,KAAxB,SACI,cAACO,EAAA,EAAD,CACAC,MAAOC,KAAKC,KAAKN,EAAMO,OAAO,GAC9BhC,SACE0B,O,kBClBC,SAASO,EAAT,GAA0B,IAAN9C,EAAK,EAALA,IAAK,EAEZ+C,IAAM5C,UAAS,GAFH,mBAE7B6C,EAF6B,KAEvBC,EAFuB,KAQpC,OACI,cAACC,EAAA,EAAD,CAAUF,KAAMA,EACJG,iBAAkB,IAClBC,eAAkB,kBAAMH,GAAQ,IAF5C,SAGI,cAACI,EAAA,EAAD,CAAOC,SAAS,QAAhB,SACCtD,MC0GEuD,MAlHf,WAAgB,IAAD,EACWpD,mBAAS,IADpB,mBACRmC,EADQ,KACDkB,EADC,OAEqBrD,mBAAS,OAF9B,mBAERsD,EAFQ,KAEIC,EAFJ,OAGmBvD,oBAAS,GAH5B,mBAGRwD,EAHQ,KAGGC,EAHH,OAIiBzD,mBAAS,GAJ1B,mBAIR0D,EAJQ,KAIEC,EAJF,OAKO3D,mBAAS,IALhB,mBAKRH,EALQ,KAKH+D,EALG,iDAkBf,WAA0BC,GAA1B,eAAA9E,EAAA,sEACyBH,EAAQ,EAAG,CAACmC,KAAM8C,EAAQ9C,KAAMC,KAAM6C,EAAQ7C,OADvE,OAE0B,OADlB/B,EADR,QAEeU,QACX0D,EAAS,GAAD,mBAAKlB,GAAL,gBAAgBlD,EAAS6E,SAElCF,EAAO3E,EAAS8E,SALnB,4CAlBe,kEA0Bf,WAA0BC,GAA1B,eAAAjF,EAAA,sEACyBK,EAAW,EAAG4E,GADvC,OAEyB,OADjB/E,EADR,QAEcU,SACV0D,EAASlB,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,MAEzCN,KAAcvB,EAAMO,OAAO,GAAG,GAC/BiB,EAAYD,EAAS,IAGzBE,EAAO3E,EAAS8E,SATlB,4CA1Be,kEAgDf,WAA2BtD,EAAO2D,GAAlC,eAAArF,EAAA,sEAC0BQ,EAAU,EAAG6E,EAAQ,CAACrD,KAAMN,IADtD,OAGyB,OAFhBxB,EADT,QAGcU,QACVwC,EAAMkC,KAAI,SAAAH,GAIR,OAHGA,EAAKC,OAASC,IACfF,EAAKnD,KAAON,GAEPyD,KAGXN,EAAO3E,EAAS8E,SAXlB,4CAhDe,kEA8Df,WAAsCK,GAAtC,iBAAArF,EAAA,6DACQuF,EAAQnC,EAAMoC,MAAM,SAAAL,GAAI,OAAIA,EAAKC,OAASC,KADlD,SAEyB7E,EAAU,EAAG6E,EAAQ,CAACpD,MAAOsD,EAAMtD,OAF5D,OAGyB,OADjB/B,EAFR,QAGcU,QACV0D,EACElB,EAAM8B,QAAO,SAAAC,GAIX,OAHGA,EAAKC,OAASC,IACfF,EAAKlD,KAAO/B,EAAS6E,KAAK9C,MAErBkD,MAGfN,EAAO3E,EAAS8E,SAZhB,4CA9De,sBAuFb,OA/EFS,qBAAU,WAAK,4CACb,4BAAAzF,EAAA,sEACyBG,EAAQ,GADjC,OAEyB,OADjBD,EADR,QAEcU,QACV0D,EAASpE,EAAS6E,MAHtB,4CADa,uBAAC,WAAD,wBAMbW,KACA,IA0EI,sBAAKpE,UAAY,YAAjB,UACE,cAAC,EAAD,CAAQN,QA1FD,8CA2FP,cAAC,EAAD,CACCoB,QAtDT,SAAiBuD,GACfnB,EACEmB,IAqDKtD,eAjDT,SAAwBuD,GACtBlB,EAAakB,MAiDP,sBAAMtE,UAAY,UAAlB,SAEI,cAAC,IAAD,CACC8B,MAASA,EACTyC,WAlGE,4CAmGFC,uBAnGE,4CAoGFC,YAAexB,EACfE,UAAaA,EACbuB,YAtGE,8CAuGFrB,SAAYA,MAGjB,cAAC,EAAD,CACAvB,MAASA,EACTC,aA/Ba,SAAC4C,EAAGtB,GAErBC,EADc,IAAbD,EACW,EAEAA,EAAW,MA4BnB,cAACf,EAAD,CAAU9C,IAAOA,QC7GVoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,iICPMrD,EAAYC,aAAW,iBAAO,CAChCE,KAAM,CACJgE,MAAO,aA2DEC,IArDf,SAAc9E,GAAO,IACT+E,EAGe/E,EAHf+E,KACArB,EAEe1D,EAFf0D,WACAsB,EACehF,EADfgF,mBACAnB,EAAe7D,EAAf6D,YAJQ,EAMoB/E,mBAASiG,EAAKjF,MANlC,mBAMTmF,EANS,KAMGC,EANH,OAOoBpG,mBAASiG,EAAKlF,MAPlC,mBAOTsF,EAPS,KAOGC,EAPH,KASVC,EAAa3E,IAMnB,OAJA4C,qBAAU,WACNO,EAAYsB,EAAYJ,EAAK9B,QAC/B,CAACkC,IAGC,sBAAKhG,UAAY,WAAjB,UACI,qBAAKA,UAAY,QAAjB,SACA,cAAC,IAAD,CACAU,KAAO,WACPO,MAAQ,YACRkF,QAAWL,EACXzF,SAAY,WACRwF,EAAmBD,EAAK9B,MACxBiC,GAAeD,QAGnB,sBAAK9F,UAAY,mBAAjB,UACI,sBAAKA,UAAY,IAAjB,yBAEI,cAAC,IAAD,CACAxB,GAAK,iBACL2B,QAAU,WACVH,UAAakG,EAAWxE,KACxBtB,MAAS4F,EACT3F,SAAY,SAAAC,GAAU2F,EAAc3F,EAAMC,OAAOH,UAPrD,eAUI,cAAC,IAAD,UAAMwF,EAAKQ,eAGf,cAAC,IAAD,CACAjG,QAAU,YACVc,MAAQ,YACRC,QAAY,WAAOqD,EAAWqB,EAAK9B,OAHnC,SAKI,cAAC,IAAD,UAAM,cAAC,IAAD,gB,yEC/D1B,iaAIA,SAASuC,UAAUxF,OAAO,IAElBsC,UAOAtC,MAPAsC,UACAsB,YAMA5D,MANA4D,YACA3C,MAKAjB,MALAiB,MACAyC,WAIA1D,MAJA0D,WACAC,uBAGA3D,MAHA2D,uBACAE,YAEA7D,MAFA6D,YACArB,SACAxC,MADAwC,SAGEiD,WAAa,SAAC5H,EAAG6H,GACnB,OAAG7H,EAAE0H,UAAYG,EAAEH,UAAkB,EAC7B1H,EAAE0H,UAAYG,EAAEH,WAAmB,EACnC1H,EAAE0H,YAAcG,EAAEH,UAAkB,OAAvC,GAEHI,aAAe,SAAC9H,EAAG6H,GACrB,OAAG7H,EAAE0H,UAAYG,EAAEH,UAAkB,EAC7B1H,EAAE0H,UAAYG,EAAEH,WAAmB,EACnC1H,EAAE0H,YAAcG,EAAEH,UAAkB,OAAvC,GAGHK,kBAAoB,WAClB,OAAO3E,MAAM4E,KAAKvD,UAAYmD,WAAaE,eAG7C1F,QAAU,SAAVA,UACE,MAAmB,QAAhB2D,YAEQgC,oBAAoB7C,QAAO,SAAC+C,EAAEC,GAAH,OAAaA,GAAqB,EAAXvD,UAAiBuD,EAAoB,EAAXvD,SAAe,KAAIW,KAAI,SAAA4B,MAChG,GAAGA,KAAKjF,OAASkG,KAAKpC,aACpB,OAAQ,2DAAC,qCAAD,CAERmB,KAAQA,KACRrB,WAAcA,WACdG,YAAeA,YACfmB,mBAAsBrB,wBAJfoB,KAAK9B,SASzB2C,oBAAoB7C,QAAO,SAAC+C,EAAEC,GAAH,OAAaA,GAAqB,EAAXvD,UAAiBuD,EAAoB,EAAXvD,SAAe,KAAIW,KAAK,SAAA4B,GAAI,OAAK,2DAAC,qCAAD,CAExGA,KAAQA,EACRrB,WAAcA,WACdG,YAAeA,YACfmB,mBAAsBrB,wBAJfoB,EAAK9B,UAQ5B,OACI,kEAAK9D,UAAY,YAAjB,SACKc,YAMEuF,iC","file":"static/js/main.148f9e27.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nconst API_URL = 'https://todo-api-learning.herokuapp.com/'\n\nconst instance = axios.create(\n    {\n        baseURL: API_URL,\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n)\n\n\n// const request  = async (method, api, data) => {\n//     try{\n//         return await instance({\n//             method,\n//             url:api,\n//             data\n//         })\n//     }\n//     catch(e){\n//         console.log(e)\n//     }\n// }\n\n\nexport const addTask = async (id, record) => {\n        const response = await instance.post(`v1/task/${id}`, record)\n        return response\n}\n\nexport const getTask = async (id) => {\n        const response = await instance.get(`v1/tasks/${id}`)\n        return response  \n}\n\nexport const deleteTask = async (id, idTask) =>{\n        const response = await instance.delete(`v1/task/${id}/${idTask}`)\n        return response\n}\n\nexport const checkTask = async(id, idTask, record) => {\n        const response = await instance.patch(`v1/task/${id}/${idTask}`, record)\n        return response \n}\n\ninstance.interceptors.response.use(\n    response => {\n        if(response.status !== 200 && response.status !== 204){\n            return alert(`Error: ${response.status}`)\n        }\n        return response\n    },\n    err => {\n        // alert(err)\n        return err}\n)","import React, {useState} from 'react'\nimport TextField from '@material-ui/core/TextField';\n\nfunction Header({addItem}){\n    const [stateInp, setStateInp] = useState('')\n    const [counterForID, setcounterForID ] = useState(0)  \n\nreturn(\n    <div className = \"require\">\n\n        <TextField \n        id=\"outlined-basic\" \n        label=\"Введите задачу\" \n        variant=\"outlined\"\n        value = {stateInp}\n        onChange = {event => setStateInp(event.target.value)}\n        onKeyDown = {event=>{\n            if(event.key === 'Enter'){\n                if(stateInp === '') alert('Ничего нет!')\n                else {\n                    addItem({name:stateInp, done:false})\n                    setcounterForID(counterForID + 1)\n                    setStateInp('') \n                }\n                \n            }\n        }}\n         />\n    </div>\n)\n}\n\nexport default Header","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Button from '@material-ui/core/Button';\n\n\n\nfunction Filters(props){\n    const { filters, \n            filtersForDate} = props\n    return(\n        <div className=\"containerForFiltersBtn\">\n            <div>\n            <Button variant = \"outlined\" color = \"primary\" onClick = {() => filters('true')}>\n                Done\n            </Button>\n            <Button variant = \"outlined\" color = \"secondary\" onClick = {() => filters('false')}>\n                Undone\n            </Button>\n            <Button variant = \"outlined\" color = \"default\" onClick = {() => filters('all')}>\n                All\n            </Button>\n            </div>\n\n            <span className=\"arrowContainer\">\n                <p>Sort by date:</p>&#160;&#160;\n                <IconButton aria-label = \"delete\"  size=\"small\" onClick = {() => filtersForDate(false)}>\n                    <ArrowDownwardIcon fontSize = \"inherit\" />\n                </IconButton>\n                <IconButton aria-label = \"delete\"  size=\"small\" onClick = {() => filtersForDate(true)}>\n                    <ArrowUpwardIcon fontSize = \"inherit\" />\n                </IconButton>\n            </span>    \n        </div>  \n    )\n}\n\nexport default Filters","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  function MyPaginations(props){\n    const {\n      todos,\n      handlerPagin\n    } = props\n\n    const classes = useStyles();\n\n    return(\n        <div className={classes.root}>\n            <Pagination \n            count={Math.ceil(todos.length/5)}\n            onChange = {\n              handlerPagin\n            }\n           />\n        </div>\n     )\n}\n\nexport default MyPaginations","import React from 'react'\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\n\n\nexport default function AlertErr ({err}){\n// console.log(err)\n    const [open, setOpen] = React.useState(true);\n\n\n    // const handleClose = () => {\n    //     setOpen(false);\n    //   };\n    return(\n        <Snackbar open={open} \n                    autoHideDuration={3000}  \n                    onRequestClose = {() => setOpen(false)} >\n            <Alert severity=\"error\">\n            {err} \n            </Alert>\n        </Snackbar>\n    )\n\n}","import React, {useState, useEffect} from 'react'\nimport {addTask, deleteTask, getTask, checkTask} from './services/userServices'\n\n\nimport Header from './components/Header'\nimport Filters from './components/Filters'\nimport ListTodos from './components/LIstTodos'\nimport MyPaginations from './components/Paginations'\nimport AlertErr from './components/AlertErr'\n\n\n\nfunction App() {\nconst [todos, setTodos] = useState([])\nconst [statusTodo, setStatusTodo] = useState('all')\nconst [stateDate, setStateDate] = useState(false)\nconst [statePag, setStatePag] = useState(0)\nconst [err, setErr] = useState('')\n\n\nuseEffect(() =>{\n  async  function func (){\n    const response = await getTask(6)\n    if(response.status === 200){\n      setTodos(response.data)\n    }} \n  func()\n},[])\n\n\nasync function addNewItem(newItem){\n  const response = await addTask(6, {name: newItem.name, done: newItem.done})\n   if(response.status === 200){\n    setTodos([...todos, {...response.data}])\n   }\n   setErr(response.message)\n}\n\nasync function deleteItem(idDeleteItem){\n  const response = await deleteTask(6, idDeleteItem)\n  if(response.status === 204){\n    setTodos(todos.filter(item => item.uuid !== idDeleteItem))\n    \n    if(statePag === (todos.length-1)/5){\n      setStatePag(statePag-1)\n    }\n  }\n  setErr(response.message)\n}\n\nfunction filters(statusItem){\n  setStatusTodo(\n    statusItem\n  )\n}\n\nfunction filtersForDate(valueDate){\n  setStateDate(valueDate)\n}\n\nasync function changeTitle(value, idItem){\n   const response = await checkTask(6, idItem, {name: value})\n\n  if(response.status === 200){\n    todos.map(item => {\n      if(item.uuid === idItem){\n        item.name = value\n      }\n      return item\n    })\n  }\n  setErr(response.message)\n}\n\nasync function changeCheckedTodosItem(idItem){\n  const check = todos.find( item => item.uuid === idItem)\n  const response = await checkTask(6, idItem, {done: !check.done})\n  if(response.status === 200){\n    setTodos(\n      todos.filter(item => {\n        if(item.uuid === idItem){\n          item.done = response.data.done\n        }\n        return item\n      })) \n}\nsetErr(response.message)\n}\n\nconst handlerPagin = (e, statePag) => {\n  if(statePag === 1)\n    setStatePag(0)\n  else\n    setStatePag(statePag - 1)\n}\n// useEffect(() =>{\n//   return <AlertErr err = {err}/>\n// },[err])\n\n  return (\n    \n      <div className = \"container\">\n        <Header addItem = {addNewItem}/>\n        <Filters \n         filters = {filters} \n         filtersForDate = {filtersForDate}/>\n        <form className = 'content'>\n          {\n            <ListTodos \n             todos = {todos} \n             deleteItem = {deleteItem} \n             changeCheckedTodosItem = {changeCheckedTodosItem} \n             statusTodos = {statusTodo} \n             stateDate = {stateDate}\n             changeTitle = {changeTitle}\n             statePag = {statePag}/>\n          }\n        </form>\n        <MyPaginations \n        todos = {todos}\n        handlerPagin = {handlerPagin}/>\n        <AlertErr err = {err}/>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      width: \"750px\"\n    },\n  }));\n\n\n\nfunction Item(props){\n    const { todo, \n            deleteItem, \n            changeCheckedTodos,\n            changeTitle} = props\n\n    const [stateCheck, setStateCheck] = useState(todo.done)\n    const [stateTitle, setStateTitle] = useState(todo.name)\n\n    const styleInput = useStyles()\n\n    useEffect(() =>{\n        changeTitle(stateTitle, todo.uuid)\n    },[stateTitle])\n    \n    return(\n        <div className = \"elements\" >\n            <div className = \"check\" >\n            <Checkbox\n            name = \"checkedB\"\n            color = \"secondary\"\n            checked = {stateCheck}\n            onChange = {() => {\n                changeCheckedTodos(todo.uuid)\n                setStateCheck(!stateCheck)\n            }}/>\n            </div>\n            <div className = \"elemetns-content\">\n                <div className = \"a\">\n                    &#160;&#160;&#160;\n                    <TextField \n                    id = \"standard-basic\" \n                    variant = \"standard\"\n                    className = {styleInput.root} \n                    value = {stateTitle}\n                    onChange = {event => {setStateTitle(event.target.value)\n                                         }}>\n                    </TextField>&#160;&#160;&#160;\n                    <Box>{todo.createdAt}</Box>\n                </div>\n        \n                <Button \n                variant = \"contained\" \n                color = \"secondary\" \n                onClick = { () => {deleteItem(todo.uuid)}}\n                >\n                    <Icon><DeleteForeverIcon/></Icon>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Item","import React from 'react'\nimport Item from './Item'\n\n\nfunction ListTodos(props){\n    const {\n        stateDate,\n        statusTodos, \n        todos, \n        deleteItem, \n        changeCheckedTodosItem,\n        changeTitle,\n        statePag\n    } = props\n\n    const sortDateUp = (a, b) => {\n        if(a.createdAt < b.createdAt) return 1\n        else if(a.createdAt > b.createdAt) return -1\n        else if(a.createdAt === b.createdAt) return 0\n    }\n    const sortDateDown = (a, b) => {\n        if(a.createdAt > b.createdAt) return 1\n        else if(a.createdAt < b.createdAt) return -1\n        else if(a.createdAt === b.createdAt) return 0\n    }\n\n    const filterTodoForDate = () =>{\n            return todos.sort(stateDate ? sortDateUp : sortDateDown)\n    }\n    \n    const filters = () =>{\n            if(statusTodos !== 'all')\n            {\n                return filterTodoForDate().filter((_,index)=> (index >= (statePag * 5))&&(index < (statePag * 5) +5)).map(todo => {\n                          if(todo.done === eval(statusTodos)){\n                            return (<Item \n                            key = {todo.uuid} \n                            todo = {todo}  \n                            deleteItem = {deleteItem} \n                            changeTitle = {changeTitle}  \n                            changeCheckedTodos = {changeCheckedTodosItem}/>)\n                          }\n                        })\n            }\n            \n        return filterTodoForDate().filter((_,index)=> (index >= (statePag * 5))&&(index < (statePag * 5) +5)).map( todo => (<Item \n                    key = {todo.uuid} \n                    todo = {todo}  \n                    deleteItem = {deleteItem}\n                    changeTitle = {changeTitle}   \n                    changeCheckedTodos = {changeCheckedTodosItem}\n                />))\n    }\n\n    return(\n        <div className = \"ListTodos\">\n            {filters()}\n        </div>\n    )\n\n    }\n\nexport default ListTodos"],"sourceRoot":""}