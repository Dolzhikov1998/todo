{"version":3,"sources":["services/userServices.js","components/Header.js","components/Filters.js","components/Item.js","components/LIstTodos.js","components/Paginations.js","components/AlertErr.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","process","headers","addTask","record","a","post","response","getTask","params","get","deleteTask","idTask","delete","checkTask","patch","interceptors","use","status","alert","err","Header","addItem","useState","stateInp","setStateInp","counterForID","setcounterForID","className","TextField","id","label","variant","value","onChange","event","target","onKeyDown","key","name","done","Filters","props","filters","filtersForDate","Button","color","onClick","IconButton","aria-label","size","fontSize","useStyles","makeStyles","root","width","Item","todo","deleteItem","changeCheckedTodos","changeTitle","stateCheck","setStateCheck","stateTitle","setStateTitle","styleInput","Checkbox","checked","e","uuid","Box","createdAt","Icon","ListTodos","todos","changeCheckedTodosItem","map","theme","marginTop","spacing","MyPaginations","handlerPagin","countTodos","classes","Pagination","count","AlertErr","React","open","setOpen","Snackbar","autoHideDuration","onRequestClose","Alert","severity","querystring","require","App","setTodos","statusTodo","setStatusTodo","stateDate","setStateDate","statePag","setStatePag","setErr","setCountTodos","filterDone","setFilterDone","filterDate","setFilterDate","newItem","length","data","Math","ceil","countCards","message","idDeleteItem","stringify","page","order","responseGet","rows","statusItem","valueDate","idItem","check","find","item","filter","useEffect","func","statePagNow","statusTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.133afef1.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = process.env.REACT_APP_API\n\nconst instance = axios.create(\n    {\n        baseURL: url,\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n)\n\nexport const addTask = async (record) => {\n    const response = await instance.post(`card`, record)\n    return response\n}\n\nexport const getTask = async (params) => {\n    const response = await instance.get(`card?${params}`)\n    return response\n}\n\nexport const deleteTask = async (idTask) => {\n    const response = await instance.delete(`card/${idTask}`)\n    return response\n}\n\nexport const checkTask = async (idTask, record) => {\n    const response = await instance.patch(`card/${idTask}`, record)\n    return response\n}\n\ninstance.interceptors.response.use(\n    response => {\n        if (response.status !== 200 && response.status !== 204) {\n            return alert(`Error: ${response.status}`)\n        }\n        return response\n    },\n    err => {\n        return err\n    }\n)","import React, {useState} from 'react'\nimport TextField from '@material-ui/core/TextField';\n\nfunction Header({addItem}){\n    const [stateInp, setStateInp] = useState('')\n    const [counterForID, setcounterForID ] = useState(0)  \n\nreturn(\n    <div className = \"require\">\n\n        <TextField \n        id=\"outlined-basic\" \n        label=\"Введите задачу\" \n        variant=\"outlined\"\n        value = {stateInp}\n        onChange = {event => setStateInp(event.target.value)}\n        onKeyDown = {event=>{\n            if(event.key === 'Enter'){\n                if(stateInp === '') alert('Ничего нет!')\n                else {\n                    addItem({name:stateInp, done:false})\n                    setcounterForID(counterForID + 1)\n                    setStateInp('') \n                }\n                \n            }\n        }}\n         />\n    </div>\n)\n}\n\nexport default Header","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport Button from '@material-ui/core/Button';\n\n\n\nfunction Filters(props){\n    const { filters, \n            filtersForDate} = props\n    return(\n        <div className=\"containerForFiltersBtn\">\n            <div>\n            <Button variant = \"outlined\" color = \"primary\" onClick = {() => filters('true')}>\n                Done\n            </Button>\n            <Button variant = \"outlined\" color = \"secondary\" onClick = {() => filters('false')}>\n                Undone\n            </Button>\n            <Button variant = \"outlined\" color = \"default\" onClick = {() => filters('')}>\n                All\n            </Button>\n            </div>\n\n            <span className=\"arrowContainer\">\n                <p>Sort by date:</p>&#160;&#160;\n                <IconButton aria-label = \"delete\"  size=\"small\" onClick = {() => filtersForDate('desc')}>\n                    <ArrowDownwardIcon fontSize = \"inherit\" />\n                </IconButton>\n                <IconButton aria-label = \"delete\"  size=\"small\" onClick = {() => filtersForDate('asc')}>\n                    <ArrowUpwardIcon fontSize = \"inherit\" />\n                </IconButton>\n            </span>    \n        </div>  \n    )\n}\n\nexport default Filters","import React, {useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      width: \"750px\"\n    },\n  }));\n\n\n\nfunction Item(props){\n    const { todo, \n            deleteItem, \n            changeCheckedTodos,\n            changeTitle} = props\n\n    const [stateCheck, setStateCheck] = useState(todo.done)\n    const [stateTitle, setStateTitle] = useState(todo.name)\n\n    const styleInput = useStyles()\n\n    // useEffect(() =>{\n    //     changeTitle(stateTitle, todo.uuid)\n    // },[stateTitle])\n    \n    return(\n        <div className = \"elements\" >\n            <div className = \"check\" >\n            <Checkbox\n            name = \"checkedB\"\n            color = \"secondary\"\n            checked = {stateCheck}\n            onChange = {(e) => {\n                changeCheckedTodos(todo.uuid)\n                setStateCheck(!stateCheck)\n            }}/>\n            </div>\n            <div className = \"elemetns-content\">\n                <div className = \"a\">\n                    &#160;&#160;&#160;\n                    <TextField \n                    id = \"standard-basic\" \n                    variant = \"standard\"\n                    className = {styleInput.root} \n                    value = {stateTitle}\n                    onChange = {event => {\n                            setStateTitle(event.target.value)\n                            changeTitle(stateTitle, todo.uuid)\n                                         }}>\n                    </TextField>&#160;&#160;&#160;\n                    <Box>{todo.createdAt}</Box>\n                </div>\n        \n                <Button \n                variant = \"contained\" \n                color = \"secondary\" \n                onClick = { () => {deleteItem(todo.uuid)}}\n                >\n                    <Icon><DeleteForeverIcon/></Icon>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Item","import React from 'react'\nimport Item from './Item'\n\n\nfunction ListTodos(props) {\n    const {\n        todos,\n        deleteItem,\n        changeCheckedTodosItem,\n        changeTitle\n    } = props\n\n    // const sortDateUp = (a, b) => {\n    //     if (a.date < b.date) return 1\n    //     else if (a.date > b.date) return -1\n    //     else if (a.date === b.date) return 0\n    // }\n    // const sortDateDown = (a, b) => {\n    //     if (a.date > b.date) return 1\n    //     else if (a.date < b.date) return -1\n    //     else if (a.date === b.date) return 0\n    // }\n\n    // const filterTodoForDate = () => {\n    //     return todos.sort(stateDate ? sortDateUp : sortDateDown)\n    // }\n\n    const filters = () => {\n        // if (statusTodos !== 'all') {\n        //     return filterTodoForDate().map(todo => {\n        //         // if (todo.done === eval(statusTodos)) {\n        //             return (<Item\n        //                 key={todo.uuid}\n        //                 todo={todo}\n        //                 deleteItem={deleteItem}\n        //                 changeTitle={changeTitle}\n        //                 changeCheckedTodos={changeCheckedTodosItem} />)\n        //         // }\n        //     })\n        // }\n\n        return todos.map(todo => (<Item\n            key={todo.uuid}\n            todo={todo}\n            deleteItem={deleteItem}\n            changeTitle={changeTitle}\n            changeCheckedTodos={changeCheckedTodosItem}\n        />))\n    }\n\n    return (\n        <div className=\"ListTodos\">\n            {filters()}\n        </div>\n    )\n\n}\n\nexport default ListTodos","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\n  function MyPaginations(props){\n    const {\n      handlerPagin,\n      countTodos\n    } = props\n\n    const classes = useStyles();\n\n    return(\n        <div className={classes.root}>\n            <Pagination \n            count={countTodos}\n            onChange = {\n              handlerPagin\n            }\n           />\n        </div>\n     )\n}\n\nexport default MyPaginations","import React from 'react'\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\n\n\nexport default function AlertErr ({err}){\n// console.log(err)\n    const [open, setOpen] = React.useState(true);\n\n\n    // const handleClose = () => {\n    //     setOpen(false);\n    //   };\n    return(\n        <Snackbar open={open} \n                    autoHideDuration={3000}  \n                    onRequestClose = {() => setOpen(false)} >\n            <Alert severity=\"error\">\n            {err} \n            </Alert>\n        </Snackbar>\n    )\n\n}","import React, { useState, useEffect } from 'react'\nimport { addTask, deleteTask, getTask, checkTask } from './services/userServices'\n\n\nimport Header from './components/Header'\nimport Filters from './components/Filters'\nimport ListTodos from './components/LIstTodos'\nimport MyPaginations from './components/Paginations'\nimport AlertErr from './components/AlertErr'\n\nconst querystring = require('querystring');\n\n\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [statusTodo, setStatusTodo] = useState('all')\n  const [stateDate, setStateDate] = useState(false)\n  const [statePag, setStatePag] = useState(0)\n  const [err, setErr] = useState('')\n  const [countTodos, setCountTodos] = useState(0)\n  const [filterDone, setFilterDone] = useState('')\n  const [filterDate, setFilterDate] = useState('asc')\n\n  useEffect(() => {\n    async function func() {\n      const response = await getTask(querystring.stringify({\n        page: statePag,\n        order: 'asc'\n      }))\n      if (response.status === 200) {\n        setTodos(response.data.rows)\n        setCountTodos(Math.ceil(response.data.count / 5))\n      }\n    }\n    func()\n  }, [])\n\n  async function addNewItem(newItem) {\n    const response = await addTask({ name: newItem.name })\n    if (response.status === 200) {\n      if (todos.length < 5)\n        setTodos([...todos, { ...response.data }])\n    }\n    setCountTodos(Math.ceil(response.data.countCards.count / 5))\n    setErr(response.message)\n  }\n\n  async function deleteItem(idDeleteItem) {\n    const response = await deleteTask(idDeleteItem)\n    if (response.status === 204) {\n      const responseGet = await getTask(querystring.stringify({\n        page: statePag,\n        done: filterDone,\n        order: filterDate\n      }))\n\n      setTodos(responseGet.data.rows)\n      setCountTodos(Math.ceil(responseGet.data.count / 5))\n    }\n    setErr(response.message)\n  }\n\n  async function filters(statusItem) {\n    setFilterDone(statusItem)\n    const response = await getTask(querystring.stringify({\n      page: statePag,\n      done: statusItem,\n      order: filterDate\n    }))\n    setTodos(response.data.rows)\n    setStatusTodo(\n      statusItem\n    )\n    setCountTodos(Math.ceil(response.data.count / 5))\n  }\n\n  async function filtersForDate(valueDate) {\n\n    setFilterDate(valueDate)\n    const response = await getTask(querystring.stringify({\n      page: statePag,\n      order: valueDate,\n      done: filterDone\n    }))\n    setTodos(response.data.rows)\n    setStateDate(valueDate)\n    setCountTodos(Math.ceil(response.data.count / 5))\n  }\n\n  async function changeTitle(value, idItem) {\n    const check = todos.find(item => item.uuid === idItem)\n    const response = await checkTask(idItem, { name: value, done: check.done })\n\n    if (response.status === 200) {\n      todos.map(item => {\n        if (item.uuid === idItem) {\n          item.name = value\n        }\n        return item\n      })\n    }\n    setErr(response.message)\n  }\n\n  async function changeCheckedTodosItem(idItem) {\n    const check = todos.find(item => item.uuid === idItem)\n    const response = await checkTask(idItem, { name: check.name, done: !check.done })\n\n    if (response.status === 200) {\n      setTodos(\n        todos.filter(item => {\n          if (item.uuid === idItem) {\n            item.done = !item.done\n          }\n          return item\n        }\n        ))\n    }\n    setErr(response.message)\n  }\n\n  const handlerPagin = async (e, statePagNow) => {\n    if (statePag === 1) setStatePag(0)\n    setStatePag(statePagNow - 1)\n\n    const response = await getTask(querystring.stringify({\n      page: statePagNow - 1,\n      order: filterDate,\n      done: filterDone\n    }))\n    setTodos(response.data.rows)\n  }\n\n  return (\n\n    <div className=\"container\">\n      <Header addItem={addNewItem} />\n      <Filters\n        filters={filters}\n        filtersForDate={filtersForDate} />\n      <form className='content'>\n        {\n          <ListTodos\n            todos={todos}\n            deleteItem={deleteItem}\n            changeCheckedTodosItem={changeCheckedTodosItem}\n            statusTodos={statusTodo}\n            stateDate={stateDate}\n            changeTitle={changeTitle}\n            statePag={statePag} />\n        }\n      </form>\n      <MyPaginations\n        todos={todos}\n        countTodos={countTodos}\n        handlerPagin={handlerPagin} />\n      <AlertErr err={err} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}